// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lib;

namespace lib.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210929143820_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("lib.CheckingAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CheckingAccounts");
                });

            modelBuilder.Entity("lib.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CheckingAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TransactionType")
                        .HasColumnType("TEXT");

                    b.HasKey("LogId");

                    b.HasIndex("CheckingAccountId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("lib.Log", b =>
                {
                    b.HasOne("lib.CheckingAccount", "CheckingAccount")
                        .WithMany("Logs")
                        .HasForeignKey("CheckingAccountId");

                    b.Navigation("CheckingAccount");
                });

            modelBuilder.Entity("lib.CheckingAccount", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
